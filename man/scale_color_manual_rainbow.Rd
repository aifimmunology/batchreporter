% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_functions.R
\name{scale_color_manual_rainbow}
\alias{scale_color_manual_rainbow}
\title{Pretty Color-Gradient-N Scaling across Data}
\usage{
scale_color_manual_rainbow(
  max_value,
  colors = c("blue", "deepskyblue", "green3", "yellow", "orange", "red"),
  value_breaks = c(0, 500, 1000, 2000, 3000, 4000),
  highest_col = "darkred"
)
}
\arguments{
\item{max_value}{Character value. Highest data value to extend color scale to.}

\item{colors}{Colors to use in  \code{scale_color_gradientn()}}

\item{value_breaks}{Values associated with each color, in order}

\item{highest_col}{Color to scale out to for observed values higher than
largest \code{value_breaks} value}
}
\value{
A custom function of \code{scale_color_gradientn()} with colors, values, and breaks defined.
The function will accept additional arguments to \code{scale_color_gradientn()}
}
\description{
Creates a standard rainbow color scaling for set of values. Ensures default range
of interest will be colored consistently, with any observed values higher than
the default range colored a separate color. By default, expected range is blue to
red with high values as dark red. Default ranges were roughly based on genes per cell
}
\examples{
library(ggplot2)
set.seed(3)
high_genes <- data.frame(x = runif(100, 0, 10), y = 1:100, n_genes = rnorm(100, 3500, 1000))
my_color_fun_high <- scale_color_manual_rainbow(max(high_genes$n_genes))
ggplot(high_genes, aes(x, y, color = n_genes))+ geom_point() + my_color_fun_high()

super_high_genes <- data.frame(x = runif(100, 0, 10), y = 1:100, n_genes = runif(100, 3000, 9000))
my_color_fun_super_high <- scale_color_genes(max(super_high_genes$n_genes))
ggplot(super_high_genes, aes(x, y, color = n_genes))+ geom_point() + my_color_fun_super_high()

low_genes <- data.frame(x = runif(100, 0, 10), y = 1:100, n_genes = runif(100, 0, 2900))
my_color_fun_low <- scale_color_genes(max(low_genes$n_genes))
ggplot(low_genes, aes(x, y, color = n_genes))+ geom_point() + my_color_fun_low()
}
